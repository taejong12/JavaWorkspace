/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.67
 * Generated at: 2022-10-31 23:58:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.MainPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class NewFile1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("@import url('https://fonts.googleapis.com/css?family=Oswald:400,700');\r\n");
      out.write("\r\n");
      out.write(":root {\r\n");
      out.write("  --level-one: translateZ(3rem);\r\n");
      out.write("  --level-two: translateZ(6rem);\r\n");
      out.write("  --level-three: translateZ(9rem);\r\n");
      out.write("  \r\n");
      out.write("  --fw-normal: 400;\r\n");
      out.write("  --fw-bold: 700;\r\n");
      out.write("  \r\n");
      out.write("  --clr: #b7c9e5;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("*, *::before, *::after {\r\n");
      out.write("  box-sizing: border-box;\r\n");
      out.write("  margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("  height: 100vh;\r\n");
      out.write("  display: grid;\r\n");
      out.write("  place-items: center;\r\n");
      out.write("  font-family: 'Oswald', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card {\r\n");
      out.write("  width: 400px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card__content {\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  position: relative;\r\n");
      out.write("  padding: 15em 5em;\r\n");
      out.write("  transition: transform 3s;\r\n");
      out.write("  // background: pink;\r\n");
      out.write("  transform-style: preserve-3d;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card:hover .card__content {\r\n");
      out.write("  transform: rotateY(.5turn);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card__front,\r\n");
      out.write(".card__back {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 0;\r\n");
      out.write("  bottom: 0;\r\n");
      out.write("  left: 0;\r\n");
      out.write("  right: 0;\r\n");
      out.write("  padding: 5em 3em;\r\n");
      out.write("  backface-visibility: hidden;\r\n");
      out.write("  transform-style: preserve-3d;\r\n");
      out.write("  display: grid;\r\n");
      out.write("  align-content: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card__front {\r\n");
      out.write("  background-color: var(--clr);\r\n");
      out.write("  background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/308367/fair.jpg);\r\n");
      out.write("  background-size: cover;\r\n");
      out.write("  background-blend-mode: overlay;\r\n");
      out.write("  color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card__front::before {\r\n");
      out.write("  content: '';\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  --spacer: 1em;\r\n");
      out.write("  top: var(--spacer);\r\n");
      out.write("  bottom: var(--spacer);\r\n");
      out.write("  left: var(--spacer);\r\n");
      out.write("  right: var(--spacer);\r\n");
      out.write("  border: 3px solid currentColor;\r\n");
      out.write("  transform: var(--level-one);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card__title {\r\n");
      out.write("  font-size: 3.5rem;\r\n");
      out.write("  transform: var(--level-three);\r\n");
      out.write("  order: 2;\r\n");
      out.write("  text-transform: uppercase;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card__subtitle {\r\n");
      out.write("  transform: var(--level-two);\r\n");
      out.write("  text-transform: uppercase;\r\n");
      out.write("  letter-spacing: 4px;\r\n");
      out.write("  font-size: .75rem;\r\n");
      out.write("  font-weight: var(--fw-bold);\r\n");
      out.write("  opacity: .7;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card__body {\r\n");
      out.write("  transform: var(--level-two);\r\n");
      out.write("  font-weight: var(fw-normal);\r\n");
      out.write("  font-size: 1.5rem;\r\n");
      out.write("  line-height: 1.6;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".card__back {\r\n");
      out.write("  transform: rotateY(.5turn);\r\n");
      out.write("  color: var(--clr);\r\n");
      out.write("  background: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"card\">\r\n");
      out.write("  <div class=\"card__content\">\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"card__front\">\r\n");
      out.write("      <h3 class=\"card__title\">The Fair</h3>\r\n");
      out.write("      <p class=\"card__subtitle\">Time for some fun</p>\r\n");
      out.write("    </div> \r\n");
      out.write("    \r\n");
      out.write("    <div class=\"card__back\">\r\n");
      out.write("      <p class=\"card__body\">This would be some longer text that gives a description of the things from the other side I guess</p>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
